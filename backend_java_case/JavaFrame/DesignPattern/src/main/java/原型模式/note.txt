类型：创建类模式
1.用原型实例指定创建对象的种类,并通过拷贝这些原型创建新的对象
2.原型模式主要用于对象的复制
原型模式主要用于对象的复制,核心就是类图中的Prototype,它需要具备两个条件
 1.实现Cloneable接口,在java语言中有一个Cloneable接口,它的作用只有一个,就是在运行时通知虚拟机可以安全的实现了此接口的类上使用的clone方法
 在java虚拟机中,只有实现了这个接口的类才可以被拷贝,否则再运行时会抛出异常
 2.重写Object类中clone方法,java中所有父类都是Object,Object类中有一个clone方法,作用是返回对象的一个拷贝,但是其作用域protected类型,
一般的类无法调用,因此需要将clone方法的作用域修改为public类型
   优点：
 1.使用原型模式创建对象比直接new一个对象在性能上要好的多,因为Object类的clone方法是一个本地方法,它直接操作内存中的二进制流,特别是复制大对象时,
 性能的差别非常明显
 2.简化对象的创建,使得创建对象就像我们在编辑文档时的复制粘贴一样简单
 总结:在需要重复的创建相似对象时可以考虑使用原型模式,比如需要在一个循环体内创建对象,假如对象创建过程比较复杂,或者循环次数很多,使用原型模式不但可以简化创建过程
 而且可以使系统的整体性能提高很多
 注意:
 1.使用原型模式复制对象不会调用类的构造方法,因为对象的复制时通过调用Object类的clone方法来完成的,它直接在内存中复制数据,因此不会调用到类的构造方法
 不但构造方法中的代码不会执行,甚至连访问权限都对原型模式无效